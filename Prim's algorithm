#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int main() 
{
   int n,e;
   cin>>n>>e; 
   int sv,ev,wei; 
   int **edges=new int*[n];
for(int i=0;i<n;i++)
{
        edges[i]=new int[n];
        for(int j=0;j<n;j++)
        {
            edges[i][j]=0;
        }
}
for(int i=0;i<e;i++)
   {
       cin>>sv>>ev>>wei;
       edges[sv][ev]=wei;
       edges[ev][sv]=wei;
   }
   int *visited=new int[n];
   for(int i=0;i<n;i++)
  {
    visited[i]=0;
  }
  int *parent=new int[n];
  //Taken 0 as source vertex
  parent[0]=-1;
  for(int i=1;i<n;i++)
  {
      //-2 indicates abhi koi parent nahi hai
    parent[i]=-2;
  }
  int *weight=new int[n];
  //Taken 0 as source vertex
  weight[0]=0;
  for(int i=1;i<n;i++)
  {
      weight[i]=INT_MAX;
  }
  int minweight=INT_MAX;
  //Index will have the index of min weight.
  int index;
  //Run the code for every vertex
  for(int k=0;k<n;k++)
  {
      for(int i=0;i<n;i++)
      {
          //Finding the vertex with min weight from the unvisted vertex.
          if(visited[i]==0&&weight[i]<minweight)
          {
              minweight=weight[i];
              index=i;
          }
      }
      visited[index]=1;
      //Exploring its neighbours which are unvisited
      for(int i=0;i<n;i++)
      {
          if(edges[index][i]!=0&&visited[i]==0)
          {
              if(weight[i]>edges[index][i])
              {
                  weight[i]=edges[index][i];
                  parent[i]=index;
              }
          }
      }
      minweight=INT_MAX;
  }
   for(int i=1;i<n;i++)
   { 
       if(parent[i]<i)
       {
           cout<<parent[i]<<" "<<i<<" "<<weight[i]<<endl;
       }
       else
       {
          cout<<i<<" "<<parent[i]<<" "<<weight[i]<<endl; 
       }  
   }
}
