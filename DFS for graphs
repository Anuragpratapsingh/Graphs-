//DFS
//Make a small graph and a adjacency matrix and then see the code will be easy to understand
#include <iostream>
#include<bits/stdc++.h>
using namespace std;
void dfs(int **edges,int n,int sv,int *visited)
{   
    cout<<sv<<endl;
    visited[sv]=1;
    for(int i=0;i<n;i++)
    {
        if(visited[i]==0)
        {
            int a=edges[sv][i];
            if(a==0)
            {
                continue;
            }
            else
            {
            //Call from that vertex
             dfs(edges,n,i,visited);
            }
        }   
    }
}
int main() 
{
   int n,e;
   cin>>n>>e; 
   int sv,ev; 
   int **edges=new int*[n];
for(int j=0;j<n;j++)
{
        edges[j]=new int[n];
        for(int i=0;i<n;i++)
        {
            edges[j][i]=0;
        }
}
for(int i=0;i<e;i++)
   {
       cin>>sv>>ev;
       edges[sv][ev]=1;
       edges[ev][sv]=1;
   }
   int *visited=new int[n];
   for(int i=0;i<n;i++)
   {
       visited[i]=0;
   }
   dfs(edges,n,0,visited);
}
